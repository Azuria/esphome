substitutions:
  device_name: shelly-plugs-server
  friendly_name: Shelly Plug S Server
  device_description: "Server mains control"
  
  channel_1: Relay
  
  # Higher value gives lower watt readout / Calculation (hlw8012 reading/actual load) * current_res
  current_res: "0.00220"
  # Lower value gives lower voltage readout / Calculation (mains voltage/hlw8012 reading) * voltage_div
  voltage_div: "921"
  max_power: "2000"
  max_temp: "70.0"

esphome:
  name: '${device_name}'
  comment: '${device_description}'
  platform: ESP8266
  board: esp8285

wifi:
  ssid: !secret iot_ssid
  password: !secret iot_pass

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: '${device_name}'
    password: !secret fallback_password

captive_portal:

# Enable logging
logger:
  level: DEBUG

# Enable Home Assistant API
api:
  password: !secret esphome_api_password

ota:
  safe_mode: true
  reboot_timeout: 10min
  num_attempts: 5

web_server:
  port: 80
  auth:
    username: !secret esphome_web_username
    password: !secret esphome_web_password

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO13
      inverted: True
    name: "${friendly_name} - Button"
    on_press:
      - switch.toggle: relay
      
status_led:
  pin:
    number: GPIO02
    inverted: True

output:
  - platform: gpio
    pin: GPIO00
    inverted: true
    id: led
    
    
switch:
  - platform: gpio
    pin: GPIO15
    id: relay
    name: "${friendly_name} - Relay"
    on_turn_on:
      - output.turn_on: led
    on_turn_off:
      - output.turn_off: led

sensor:
  - platform: wifi_signal
    name: "${friendly_name} - WiFi Signal"
    update_interval: 300s

  # NTC Temperature
  - platform: ntc
    sensor: temp_resistance_reading
    name: ${friendly_name} - Temperature
    unit_of_measurement: "°C"
    accuracy_decimals: 1
    icon: "mdi:thermometer"
    calibration:
      b_constant: 3350
      reference_resistance: 10kOhm
      reference_temperature: 298.15K
    on_value_range:
      - above: ${max_temp}
        then:
          - switch.turn_off: relay
          - homeassistant.service:
              service: persistent_notification.create
              data:
                title: Message from ${friendly_name}
              data_template:
                message: Switch turned off because temperature exceeded ${max_temp}°C
  - platform: resistance
    id: temp_resistance_reading
    sensor: temp_analog_reading
    configuration: DOWNSTREAM
    resistor: 32kOhm
  - platform: adc
    id: temp_analog_reading
    pin: A0

  - platform: hlw8012
    sel_pin:
      number: GPIO12
      inverted: true
    cf_pin: GPIO05
    cf1_pin: GPIO14
    current_resistor: ${current_res}
    voltage_divider: ${voltage_div}
    current:
      name: "${friendly_name} - Current"
      #internal: true
      unit_of_measurement: "A"
      accuracy_decimals: 3
      icon: mdi:flash-outline
    voltage:
      name: "${friendly_name} - Voltage"
      #internal: true
      unit_of_measurement: "V"
      icon: mdi:flash-outline
    power:
      name: "${friendly_name} - Power"
      id: power
      unit_of_measurement: "W"
      icon: mdi:flash-outline
      on_value_range:
        - above: ${max_power}
          then:
            - switch.turn_off: relay
            - homeassistant.service:
                service: persistent_notification.create
                data:
                  title: Message from ${friendly_name}
                data_template:
                  message: Switch turned off because power exceeded ${max_power}W
    energy:
      name: '${friendly_name} - Energy'
      accuracy_decimals: 3
      state_class: total_increasing
      device_class: energy
      unit_of_measurement: 'kWh'
      filters:
        - throttle: 60s
        - multiply: 0.001
    update_interval: 10s
